services:
  mysqldb:
    # NOTE: Uncomment the line below if you are using Mac with m1/m2 chip
    # platform: linux/x86_64
    container_name: mysqldb
    image: mysql:8
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: ['mysqld', '--mysql-native-password=ON']
    restart: unless-stopped
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQLDB_PASSWORD
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - mysql-volume:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d/
    healthcheck:
      test:
        [
          'CMD',
          'mysqladmin',
          'ping',
          '-h',
          'localhost',
          '-u',
          '$$MYSQLDB_USER',
          '-p$$MYSQLDB_PASSWORD',
        ]
      timeout: 20s
      retries: 5
    networks:
      - scraper

  api:
    container_name: api
    depends_on:
      mysqldb:
        condition: service_healthy
    build: ./api
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $API_LOCAL_PORT:$API_DOCKER_PORT
    environment:
      - DB_HOST=$MYSQLDB_HOST
      - DB_USER=$MYSQLDB_USER
      - DB_PASSWORD=$MYSQLDB_PASSWORD
      - DB_DATABASE=$MYSQLDB_DATABASE
      - DB_PORT=$MYSQLDB_DOCKER_PORT
    stdin_open: true
    tty: true
    volumes:
      - ./api:/app
      - /app/node_modules
    networks:
      - scraper

  frontend:
    container_name: frontend
    depends_on:
      - api
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $APP_LOCAL_PORT:$APP_DOCKER_PORT
    stdin_open: true
    tty: true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - scraper

volumes:
  mysql-volume:

networks:
  scraper:
    driver: bridge
